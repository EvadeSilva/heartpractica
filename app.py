import streamlit as st
import pandas as pd
import numpy as np
import joblib

# Cargar modelo y escalador
model = joblib.load("heart_model.pkl")
scaler = joblib.load("escalador.pkl")

st.set_page_config(page_title="Predicci√≥n de Enfermedad Card√≠aca", layout="centered", page_icon="‚ù§Ô∏è")

st.title("‚ù§Ô∏è Predicci√≥n de Enfermedad Card√≠aca")
st.markdown("Esta aplicaci√≥n predice si existe **riesgo de enfermedad card√≠aca** basado en ex√°menes m√©dicos. Los datos ingresados deben ser proporcionados por un profesional de salud o interpretados con cautela. Cada campo est√° explicado para ayudar a comprender su significado.")

st.header("üîç Ingresa los datos del paciente:")

# Diccionarios para explicaciones
sex_dict = {"Mujer": 0, "Hombre": 1}
cp_dict = {
    "Dolor t√≠pico anginoso": 0,
    "Dolor at√≠pico anginoso": 1,
    "Dolor no anginoso": 2,
    "Asintom√°tico": 3
}
restecg_dict = {
    "Normal": 0,
    "Anormalidad ST-T (posible isquemia)": 1,
    "Hipertrofia ventricular izquierda": 2
}
slope_dict = {
    "Pendiente ascendente (normal)": 0,
    "Pendiente plana (riesgo intermedio)": 1,
    "Pendiente descendente (mayor riesgo)": 2
}
thal_dict = {
    "Normal": 1,
    "Defecto fijo (da√±o permanente)": 2,
    "Defecto reversible (isquemia inducida)": 3
}

# Entradas del usuario
age = st.slider("Edad", 29, 77, 50)
sex = st.selectbox("Sexo biol√≥gico", list(sex_dict.keys()), help="Sexo del paciente (hombre o mujer)")
cp = st.selectbox("Tipo de dolor en el pecho", list(cp_dict.keys()), help="\n- Dolor t√≠pico anginoso: Dolor opresivo que aparece con esfuerzo y se alivia con reposo.\n- Dolor at√≠pico anginoso: Dolor tor√°cico no cl√°sico, menos espec√≠fico.\n- Dolor no anginoso: Dolor que no parece card√≠aco.\n- Asintom√°tico: El paciente no presenta dolor en el pecho.")
trestbps = st.slider("Presi√≥n arterial en reposo (mm Hg)", 90, 200, 120, help="Valores normales suelen estar por debajo de 120 mm Hg")
chol = st.slider("Colesterol s√©rico (mg/dl)", 100, 600, 240, help="Valores deseables: menos de 200 mg/dl")
fbs = st.radio("¬øGlucosa en ayunas > 120 mg/dl?", ["No", "S√≠"], help="La glucosa elevada puede indicar riesgo de diabetes")
restecg = st.selectbox("Resultados del electrocardiograma en reposo", list(restecg_dict.keys()))
thalach = st.slider("Frecuencia card√≠aca m√°xima alcanzada", 70, 210, 150, help="Valores m√°s altos indican mayor esfuerzo cardiovascular")
exang = st.radio("¬øAngina inducida por ejercicio?", ["No", "S√≠"], help="Dolor tor√°cico provocado por esfuerzo f√≠sico")
oldpeak = st.slider("Depresi√≥n del segmento ST inducida por ejercicio", 0.0, 6.5, 1.0, step=0.1, help="Una depresi√≥n ST superior a 1 puede ser se√±al de isquemia")
slope = st.selectbox("Pendiente del segmento ST", list(slope_dict.keys()))
ca = st.slider("N√∫mero de vasos coloreados (fluoroscop√≠a)", 0, 4, 0, help="Vasos observados con anomal√≠as mediante fluoroscop√≠a")
thal = st.selectbox("Resultado del test de talasemia", list(thal_dict.keys()), help="Alteraciones en esta prueba pueden indicar condiciones card√≠acas subyacentes")

# Convertir inputs a valores num√©ricos
input_data = pd.DataFrame([[
    age,
    sex_dict[sex],
    cp_dict[cp],
    trestbps,
    chol,
    1 if fbs == "S√≠" else 0,
    restecg_dict[restecg],
    thalach,
    1 if exang == "S√≠" else 0,
    oldpeak,
    slope_dict[slope],
    ca,
    thal_dict[thal]
]], columns=[
    "age", "sex", "cp", "trestbps", "chol", "fbs",
    "restecg", "thalach", "exang", "oldpeak", "slope",
    "ca", "thal"
])

# Escalar datos
scaled_input = scaler.transform(input_data)

# Bot√≥n para predecir
if st.button("üîé Predecir"):
    prediction = model.predict(scaled_input)[0]
    proba = model.predict_proba(scaled_input)[0][1]

    if prediction == 1:
        st.error(f"‚ùå El modelo predice que **S√≠ hay riesgo de enfermedad card√≠aca** con una probabilidad del **{proba*100:.2f}%**.")
    else:
        st.success(f"‚úÖ El modelo predice que **No hay riesgo significativo de enfermedad card√≠aca** con una probabilidad del **{(1-proba)*100:.2f}%**.")

    st.markdown("### üìå Recomendaciones generales:")
    st.markdown("""
    - Consulta con un **cardi√≥logo** para confirmar los hallazgos.
    - Realiza pruebas adicionales como **ecocardiograma**, **prueba de esfuerzo** o **angiograf√≠a**, seg√∫n evaluaci√≥n cl√≠nica.
    - Mejora h√°bitos alimenticios, evita el tabaquismo y realiza actividad f√≠sica supervisada.
    - Mant√©n controlado el colesterol, la glucosa y la presi√≥n arterial.
    """)

    st.markdown("---")
    st.markdown("### ‚ÑπÔ∏è Glosario de t√©rminos usados:")
    st.markdown("""
    - **ST**: Segmento ST en un electrocardiograma. Su depresi√≥n puede indicar isquemia (falta de ox√≠geno en el coraz√≥n).
    - **ca**: N√∫mero de vasos sangu√≠neos con obstrucci√≥n observada mediante fluoroscop√≠a (examen por im√°genes).
    - **thal**: Resultado del test de talasemia, puede revelar alteraciones sangu√≠neas que afectan al coraz√≥n.
    - **cp**: Tipo de dolor en el pecho. Un dolor t√≠pico anginoso es m√°s caracter√≠stico de enfermedad coronaria.
    """)
